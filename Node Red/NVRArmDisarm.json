[
	{
		"id": "4ba1945d.cb84dc",
		"type": "tab",
		"label": "NVR Arm/Disarm",
		"disabled": false,
		"info": ""
	},
	{
		"id": "de18d9d8.2ae6c8",
		"type": "server-state-changed",
		"z": "4ba1945d.cb84dc",
		"name": "",
		"server": "4bcb56e6.9e32f8",
		"version": 1,
		"exposeToHomeAssistant": false,
		"haConfig": [
			{
				"property": "name",
				"value": ""
			},
			{
				"property": "icon",
				"value": ""
			}
		],
		"entityidfilter": "alarm_control_panel.reolink_cameras",
		"entityidfiltertype": "exact",
		"outputinitially": true,
		"state_type": "str",
		"haltifstate": "",
		"halt_if_type": "str",
		"halt_if_compare": "is",
		"outputs": 1,
		"output_only_on_state_change": true,
		"x": 240,
		"y": 40,
		"wires": [
			[
				"77233b10.6b3a04",
				"39938d1.21bfe72"
			]
		]
	},
	{
		"id": "e64d7c4.232a08",
		"type": "http request",
		"z": "4ba1945d.cb84dc",
		"name": "Log in",
		"method": "POST",
		"ret": "obj",
		"paytoqs": false,
		"url": "http://192.168.2.130/cgi-bin/api.cgi?cmd=Login&Token=null",
		"tls": "",
		"persist": false,
		"proxy": "",
		"authType": "",
		"x": 350,
		"y": 360,
		"wires": [
			[
				"98879b5b.57f958"
			]
		],
		"info": "Calls the NVR to request the auth token for later steps"
	},
	{
		"id": "fca84c6b.cc57b",
		"type": "credentials",
		"z": "4ba1945d.cb84dc",
		"name": "NVR Creds",
		"props": [
			{
				"value": "uname",
				"type": "msg"
			},
			{
				"value": "pwd",
				"type": "msg"
			}
		],
		"x": 190,
		"y": 240,
		"wires": [
			[
				"44958de5.d34a34"
			]
		],
		"info": "Credentials for the login request"
	},
	{
		"id": "44958de5.d34a34",
		"type": "template",
		"z": "4ba1945d.cb84dc",
		"name": "",
		"field": "payload",
		"fieldType": "msg",
		"format": "handlebars",
		"syntax": "mustache",
		"template": "[{\"cmd\":\"Login\",\"action\":0,\"param\":{\"User\":{\"userName\":\"{{uname}}\",\"password\":\"{{pwd}}\"}}}]",
		"output": "str",
		"x": 180,
		"y": 300,
		"wires": [
			[
				"e64d7c4.232a08"
			]
		],
		"info": "Format the request body for the NVR to parse"
	},
	{
		"id": "da400fbe.498b3",
		"type": "change",
		"z": "4ba1945d.cb84dc",
		"name": "",
		"rules": [
			{
				"t": "set",
				"p": "Token",
				"pt": "msg",
				"to": "payload[0].value.Token.name",
				"tot": "jsonata"
			}
		],
		"action": "",
		"property": "",
		"from": "",
		"to": "",
		"reg": false,
		"x": 360,
		"y": 680,
		"wires": [
			[
				"ef1ad1cf.db8dc"
			]
		],
		"info": "Extract and store the auth token for later calls"
	},
	{
		"id": "98879b5b.57f958",
		"type": "switch",
		"z": "4ba1945d.cb84dc",
		"name": "",
		"property": "payload[0].code",
		"propertyType": "msg",
		"rules": [
			{
				"t": "eq",
				"v": "0",
				"vt": "num"
			},
			{
				"t": "neq",
				"v": "0",
				"vt": "num"
			}
		],
		"checkall": "true",
		"repair": false,
		"outputs": 2,
		"x": 350,
		"y": 420,
		"wires": [
			[
				"da400fbe.498b3"
			],
			[
				"97b90bc1.7000e8",
				"a2ffabbe.2129a8",
				"4c0de421.3fc2fc"
			]
		],
		"info": "Check if login was successful.  If it was, carry on, otherwise barf out a message."
	},
	{
		"id": "77233b10.6b3a04",
		"type": "change",
		"z": "4ba1945d.cb84dc",
		"name": "Setup Variables",
		"rules": [
			{
				"t": "set",
				"p": "DesiredState",
				"pt": "msg",
				"to": "payload",
				"tot": "jsonata"
			},
			{
				"t": "set",
				"p": "StartingState",
				"pt": "msg",
				"to": "data.old_state.state",
				"tot": "jsonata"
			},
			{
				"t": "set",
				"p": "Channels",
				"pt": "msg",
				"to": "[{\"number\":\"0\",\"class\":\"external\",\"sensitivity\":30},{\"number\":\"6\",\"class\":\"internal\",\"sensitivity\":30},{\"number\":\"7\",\"class\":\"internal\",\"sensitivity\":30}]",
				"tot": "json"
			},
			{
				"t": "set",
				"p": "AllHoursEverywhere",
				"pt": "msg",
				"to": "[{\"cmd\":\"SetRec\",\"action\":0,\"param\":{\"Rec\":{\"channel\":{CHANNEL},\"overwrite\":1,\"packTime\":\"30 Minutes\",\"postRec\":\"1 Minute\",\"preRec\":1,\"schedule\":{\"enable\":1,\"table\":\"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\"}}}}]",
				"tot": "str"
			},
			{
				"t": "set",
				"p": "StandardHoursEverywhere",
				"pt": "msg",
				"to": "[{\"cmd\":\"SetRec\",\"action\":0,\"param\":{\"Rec\":{\"channel\":{CHANNEL},\"overwrite\":1,\"packTime\":\"30 Minutes\",\"postRec\":\"1 Minute\",\"preRec\":1,\"schedule\":{\"enable\":1,\"table\":\"211111111222222222222222211111111222222222222222211111111222222222222222211111111222222222222222211111111222222222222222211111111222222222222222211111111222222222222222\"}}}}]",
				"tot": "str"
			},
			{
				"t": "set",
				"p": "AtHomeHoursEverywhere",
				"pt": "msg",
				"to": "[{\"cmd\":\"SetRec\",\"action\":0,\"param\":{\"Rec\":{\"channel\":{CHANNEL},\"overwrite\":1,\"packTime\":\"30 Minutes\",\"postRec\":\"1 Minute\",\"preRec\":1,\"schedule\":{\"enable\":1,\"table\":\"211111111222222222222222211111111222222222222222211111111222222222222222211111111222222222222222211111111222222222222222211111111222222222222222211111111222222222222222\"}}}}]",
				"tot": "str"
			},
			{
				"t": "set",
				"p": "ResultList",
				"pt": "msg",
				"to": "",
				"tot": "str"
			},
			{
				"t": "set",
				"p": "successCount",
				"pt": "msg",
				"to": "0",
				"tot": "num"
			},
			{
				"t": "set",
				"p": "failureCount",
				"pt": "msg",
				"to": "0",
				"tot": "num"
			},
			{
				"t": "set",
				"p": "CumulativeResultList",
				"pt": "msg",
				"to": "",
				"tot": "str"
			}
		],
		"action": "",
		"property": "",
		"from": "",
		"to": "",
		"reg": false,
		"x": 200,
		"y": 120,
		"wires": [
			[
				"35591d4.beceae2"
			]
		],
		"info": "Sets the variables we'll use for the rest of the flow"
	},
	{
		"id": "7386dba1.207804",
		"type": "switch",
		"z": "4ba1945d.cb84dc",
		"name": "",
		"property": "DesiredState",
		"propertyType": "msg",
		"rules": [
			{
				"t": "eq",
				"v": "armed_away",
				"vt": "str"
			},
			{
				"t": "eq",
				"v": "disarmed",
				"vt": "str"
			},
			{
				"t": "eq",
				"v": "armed_home",
				"vt": "str"
			}
		],
		"checkall": "true",
		"repair": false,
		"outputs": 3,
		"x": 330,
		"y": 1060,
		"wires": [
			[
				"6f111bcf.50bfb4"
			],
			[
				"3261ab88.2e1be4"
			],
			[
				"4608f836.da1c38"
			]
		],
		"info": "We need to know the desired state so we can send the correct request"
	},
	{
		"id": "ef1ad1cf.db8dc",
		"type": "Serial Iterator",
		"z": "4ba1945d.cb84dc",
		"name": "",
		"property": "Channels",
		"inputFlow": "feedback",
		"saveOutput": 1,
		"recursive": 0,
		"storeId": 0,
		"x": 350,
		"y": 740,
		"wires": [
			[
				"e26d01fc.bf0eb"
			],
			[
				"439108ea.88bf08",
				"823ea85d.e1e088"
			]
		],
		"info": "Loop through the defined cameras so we can set properties individually"
	},
	{
		"id": "e26d01fc.bf0eb",
		"type": "template",
		"z": "4ba1945d.cb84dc",
		"name": "",
		"field": "CurrentChannel",
		"fieldType": "msg",
		"format": "handlebars",
		"syntax": "mustache",
		"template": "{{payload.number}}",
		"output": "str",
		"x": 340,
		"y": 880,
		"wires": [
			[
				"12ade6a2.a0e6a9"
			]
		],
		"info": "Get the current camera (channel) for nest steps"
	},
	{
		"id": "12ade6a2.a0e6a9",
		"type": "template",
		"z": "4ba1945d.cb84dc",
		"name": "",
		"field": "CurrentClass",
		"fieldType": "msg",
		"format": "handlebars",
		"syntax": "mustache",
		"template": "{{payload.class}}",
		"output": "str",
		"x": 340,
		"y": 940,
		"wires": [
			[
				"4c407612.ba7f58"
			]
		],
		"info": "Get the current camera class (indoor/outdoor) for nest steps"
	},
	{
		"id": "4c407612.ba7f58",
		"type": "template",
		"z": "4ba1945d.cb84dc",
		"name": "",
		"field": "CurrentSensitivity",
		"fieldType": "msg",
		"format": "handlebars",
		"syntax": "mustache",
		"template": "{{payload.sensitivity}}",
		"output": "str",
		"x": 340,
		"y": 1000,
		"wires": [
			[
				"7386dba1.207804"
			]
		],
		"info": "Get the current sensitivity for later steps (not yet iomplemented) for nest steps"
	},
	{
		"id": "6f111bcf.50bfb4",
		"type": "function",
		"z": "4ba1945d.cb84dc",
		"name": "Armed Away setup",
		"func": "msg.payload = msg.AllHoursEverywhere.replace(/{CHANNEL}/g,msg.CurrentChannel).replace(/{SENSITIVITY}/g,msg.CurrentSensitivity);\nmsg.url = \"http://192.168.2.130/cgi-bin/api.cgi?token=\" + msg.Token;\nreturn msg;",
		"outputs": 1,
		"noerr": 0,
		"x": 610,
		"y": 1040,
		"wires": [
			[
				"14f006f4.222d19"
			]
		],
		"info": "Formnat the message for ther \"Armed Away\" state"
	},
	{
		"id": "3261ab88.2e1be4",
		"type": "function",
		"z": "4ba1945d.cb84dc",
		"name": "Disarmed Setup",
		"func": "msg.payload = msg.StandardHoursEverywhere.replace(/{CHANNEL}/g,msg.CurrentChannel).replace(/{SENSITIVITY}/g,msg.CurrentSensitivity);\nmsg.url = \"http://192.168.2.130/cgi-bin/api.cgi?token=\" + msg.Token;\nreturn msg;",
		"outputs": 1,
		"noerr": 0,
		"x": 600,
		"y": 1080,
		"wires": [
			[
				"14f006f4.222d19"
			]
		],
		"info": "Formnat the message for ther \"Disarmed\" state"
	},
	{
		"id": "14f006f4.222d19",
		"type": "http request",
		"z": "4ba1945d.cb84dc",
		"name": "Set channel state",
		"method": "POST",
		"ret": "obj",
		"paytoqs": false,
		"url": "",
		"tls": "",
		"persist": false,
		"proxy": "",
		"authType": "",
		"x": 910,
		"y": 1120,
		"wires": [
			[
				"4d592dad.e49464"
			]
		],
		"info": "Issue the request to the NVR to set the recording schedule"
	},
	{
		"id": "39938d1.21bfe72",
		"type": "debug",
		"z": "4ba1945d.cb84dc",
		"name": "The end of the line",
		"active": true,
		"tosidebar": true,
		"console": false,
		"tostatus": false,
		"complete": "true",
		"targetType": "full",
		"x": 1150,
		"y": 800,
		"wires": []
	},
	{
		"id": "4608f836.da1c38",
		"type": "function",
		"z": "4ba1945d.cb84dc",
		"name": "Armed Home setup",
		"func": "msg.payload = msg.AtHomeHoursEverywhere.replace(/{CHANNEL}/g,msg.CurrentChannel).replace(/{SENSITIVITY}/g,msg.CurrentSensitivity);\nmsg.url = \"http://192.168.2.130/cgi-bin/api.cgi?token=\" + msg.Token;\nreturn msg;",
		"outputs": 1,
		"noerr": 0,
		"x": 610,
		"y": 1120,
		"wires": [
			[
				"14f006f4.222d19"
			]
		],
		"info": "Formnat the message for ther \"Armed Home\" state"
	},
	{
		"id": "4d592dad.e49464",
		"type": "function",
		"z": "4ba1945d.cb84dc",
		"name": "ProcessResults",
		"func": "if(msg.payload[0].value.rspCode == 200)\n{\n    msg.CumulativeResultList == \"Camera \" + msg.CurrentChannel + \" was \" + msg.DesiredState + \"\\r\\n\";\n    msg.ResultList = \"Camera \" + msg.CurrentChannel + \" was \" + msg.DesiredState + \"\\r\\n\";\n    msg.payload = { \"Domain\": \"system_log\", \"Service\":\"write\", \"data\": {\"level\":\"debug\", \"message\": msg.ResultList } }\n    msg.successCount++;\n}\nelse\n{\n    msg.CumulativeResultList == \"Camera \" + msg.CurrentChannel + \" failed with code \" + msg.payload[0].value.rspCode + \"\\r\\n\";\n    msg.ResultList = msg.payload[0].value.rspCode;\n    msg.payload = { \"Domain\": \"system_log\", \"Service\":\"write\", \"data\": {\"level\":\"error\", \"message\": msg.ResultList } }\n    msg.failureCount++;\n}\nreturn msg;",
		"outputs": 1,
		"noerr": 0,
		"x": 900,
		"y": 1180,
		"wires": [
			[
				"1c2da740.7ec079"
			]
		],
		"info": "If the camera was changed successfully, set an information message"
	},
	{
		"id": "1c2da740.7ec079",
		"type": "api-call-service",
		"z": "4ba1945d.cb84dc",
		"name": "",
		"server": "4bcb56e6.9e32f8",
		"version": 1,
		"debugenabled": true,
		"service_domain": "system_log",
		"service": "write",
		"entityId": "",
		"data": "",
		"dataType": "json",
		"mergecontext": "",
		"output_location": "",
		"output_location_type": "none",
		"mustacheAltTags": false,
		"x": 1160,
		"y": 1180,
		"wires": [
			[
				"ef1ad1cf.db8dc"
			]
		],
		"info": "Write the event state to Home Assistant's log"
	},
	{
		"id": "35591d4.beceae2",
		"type": "switch",
		"z": "4ba1945d.cb84dc",
		"name": "",
		"property": "DesiredState",
		"propertyType": "msg",
		"rules": [
			{
				"t": "eq",
				"v": "pending",
				"vt": "str"
			},
			{
				"t": "neq",
				"v": "pending",
				"vt": "str"
			}
		],
		"checkall": "true",
		"repair": false,
		"outputs": 2,
		"x": 170,
		"y": 180,
		"wires": [
			[],
			[
				"fca84c6b.cc57b"
			]
		],
		"info": "Check the state we are trying to set.  \"Pending\" is an intermediate stage and doesn't need action since we'll get another message to actually arm the system."
	},
	{
		"id": "a6bb813.94c7c8",
		"type": "api-call-service",
		"z": "4ba1945d.cb84dc",
		"name": "",
		"server": "4bcb56e6.9e32f8",
		"version": 1,
		"debugenabled": true,
		"service_domain": "system_log",
		"service": "write",
		"entityId": "",
		"data": "",
		"dataType": "json",
		"mergecontext": "",
		"output_location": "",
		"output_location_type": "none",
		"mustacheAltTags": false,
		"x": 640,
		"y": 620,
		"wires": [
			[
				"39938d1.21bfe72"
			]
		],
		"info": "Write the login error to the HA log."
	},
	{
		"id": "4c0de421.3fc2fc",
		"type": "function",
		"z": "4ba1945d.cb84dc",
		"name": "ProcessResults",
		"func": "msg.payload = { \"Domain\": \"system_log\", \"Service\":\"write\", \"data\": { \"message\": \"Unable to log in to the NVR\" } }\nreturn msg;",
		"outputs": 1,
		"noerr": 0,
		"x": 620,
		"y": 560,
		"wires": [
			[
				"a6bb813.94c7c8"
			]
		],
		"info": "Format the msg for writing to the error log"
	},
	{
		"id": "5a2dea6a.8c6f04",
		"type": "comment",
		"z": "4ba1945d.cb84dc",
		"name": "What to do with failures",
		"info": "If we get a failure to log in, we should probably raise an alert and set the alarm_panel state back to disarmed so we know what the actual state is.",
		"x": 640,
		"y": 380,
		"wires": []
	},
	{
		"id": "97b90bc1.7000e8",
		"type": "api-call-service",
		"z": "4ba1945d.cb84dc",
		"name": "",
		"server": "4bcb56e6.9e32f8",
		"version": 1,
		"debugenabled": false,
		"service_domain": "alarm_control_panel",
		"service": "alarm_disarm",
		"entityId": "alarm_control_panel.reolink_cameras",
		"data": "",
		"dataType": "json",
		"mergecontext": "",
		"output_location": "",
		"output_location_type": "none",
		"mustacheAltTags": false,
		"x": 700,
		"y": 440,
		"wires": [
			[]
		]
	},
	{
		"id": "a2ffabbe.2129a8",
		"type": "api-call-service",
		"z": "4ba1945d.cb84dc",
		"name": "Notify me please.",
		"server": "4bcb56e6.9e32f8",
		"version": 1,
		"debugenabled": false,
		"service_domain": "notify",
		"service": "notify",
		"entityId": "",
		"data": "{\"title\":\"Camera error\",\"message\":\"Unable to log in to the NVR\"}",
		"dataType": "json",
		"mergecontext": "",
		"output_location": "",
		"output_location_type": "none",
		"mustacheAltTags": false,
		"x": 630,
		"y": 500,
		"wires": [
			[]
		]
	},
	{
		"id": "59027287.36119c",
		"type": "http request",
		"z": "4ba1945d.cb84dc",
		"name": "Logout",
		"method": "POST",
		"ret": "txt",
		"paytoqs": false,
		"url": "",
		"tls": "",
		"persist": false,
		"proxy": "",
		"authType": "",
		"x": 870,
		"y": 800,
		"wires": [
			[
				"39938d1.21bfe72"
			]
		]
	},
	{
		"id": "439108ea.88bf08",
		"type": "function",
		"z": "4ba1945d.cb84dc",
		"name": "Setup logout",
		"func": "msg.payload = '[{\"cmd\":\"Logout\",\"action\":0,\"param\":{}}]'\nmsg.url = \"http://192.168.2.130/cgi-bin/api.cgi?cmd=Logout&token=\" + msg.Token;\nreturn msg;",
		"outputs": 1,
		"noerr": 0,
		"x": 610,
		"y": 800,
		"wires": [
			[
				"59027287.36119c"
			]
		],
		"info": "Formnat the message for ther \"Armed Home\" state"
	},
	{
		"id": "156a8060.e06f6",
		"type": "comment",
		"z": "4ba1945d.cb84dc",
		"name": "Check origin state",
		"info": "We should probably check what state we were coming from instead of assuming it to be disarmed...",
		"x": 590,
		"y": 440,
		"wires": []
	},
	{
		"id": "823ea85d.e1e088",
		"type": "ha-entity",
		"z": "4ba1945d.cb84dc",
		"name": "",
		"server": "4bcb56e6.9e32f8",
		"version": 1,
		"debugenabled": false,
		"outputs": 1,
		"entityType": "sensor",
		"config": [
			{
				"property": "name",
				"value": "Reolink Alarm Results"
			},
			{
				"property": "device_class",
				"value": ""
			},
			{
				"property": "icon",
				"value": ""
			},
			{
				"property": "unit_of_measurement",
				"value": ""
			}
		],
		"state": "DesiredState",
		"stateType": "msg",
		"attributes": [
			{
				"property": "Successful",
				"value": "successCount",
				"valueType": "jsonata"
			},
			{
				"property": "Failed",
				"value": "failureCount",
				"valueType": "jsonata"
			},
			{
				"property": "Start State",
				"value": "StartingState",
				"valueType": "jsonata"
			}
		],
		"resend": true,
		"outputLocation": "",
		"outputLocationType": "none",
		"inputOverride": "allow",
		"x": 610,
		"y": 840,
		"wires": [
			[]
		]
	},
	{
		"id": "4bcb56e6.9e32f8",
		"type": "server",
		"z": "",
		"name": "Home Assistant"
	}
]